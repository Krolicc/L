#include <Windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>
#include <math.h>


typedef enum {
    SUCCESS = 0,
    INCORRECT_NUMBER_INPUT,
    INCORRECT_FLAG_INPUT,
    INCORRECT_NUMBER_ARGUMENTS_INPUT,
    UNKNOWN_ERROR
} ErrorCode;

static const char* errorMessages[] = {
        "Всё хорошо",
        "Некорректный ввод числа, попробуйте ещё раз",
        "Некорректный ввод флага, попробуйте ещё раз",
        "Некорректное кол-во аргументов, попробуйте ещё раз",
        "Неизвестная ошибка, что-то пошло не так"
};

int multiply(int x, int res[], int res_size)
{
    int carry = 0;

    for (int i = 0; i < res_size; i++) {
        int prod = res[i] * x + carry;

        res[i] = prod % 10;

        carry = prod / 10;
    }

    while (carry) {
        res[res_size] = carry % 10;
        carry = carry / 10;
        res_size++;
    }
    return res_size;
}

void factorial(int n)
{
    int res[500];

    res[0] = 1;
    int res_size = 1;

    for (int x = 2; x <= n; x++)
        res_size = multiply(x, res, res_size);

    printf("Факториал числа: ");
    for (int i = res_size - 1; i >= 0; i--)
        printf("%d", res[i]);
}

int is_num_func(int number, int length) {
    int count = 0, answer;
    while(number != 0) {
        count++;
        number /= 10;
    }

    answer = (count != length) ? 0 : 1;

    return answer;

}

int main(int argc, char *argv[])
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    if (argc != 3) {
        printf("%s\n", errorMessages[INCORRECT_NUMBER_ARGUMENTS_INPUT]);
        return INCORRECT_NUMBER_ARGUMENTS_INPUT;
    }

    int is_num = is_num_func(atoi(argv[1]), strlen(argv[1]));

    if(!is_num) {
        printf("%s\n", errorMessages[INCORRECT_NUMBER_INPUT]);
        return INCORRECT_NUMBER_INPUT;
    }


    long int num = atoll(argv[1]);

    if(strchr("-/", argv[2][0]) == NULL || strchr("hpseaf", argv[2][1]) == NULL) {
        printf("%s\n", errorMessages[INCORRECT_FLAG_INPUT]);
        return INCORRECT_FLAG_INPUT;
    }

    if(argv[2][1] == 'h') {

        if(num < -400000 && num > 400000) {
            printf("%s\n", errorMessages[INCORRECT_NUMBER_INPUT]);
            return INCORRECT_NUMBER_INPUT;
        }

        if(num > 100 || num == 0)
            printf("У данного числа нет чисел кратных ему в диапазоне [1,100]");
        else {
            for(int i=1; i<=100; ++i) {
                if(i % num == 0)
                    printf("%d\n", i);
            }
        }
    } else if(argv[2][1] == 'p') {

        if(num == 0) {
            printf("Число является простым");
            return SUCCESS;
        }

        if(num < -400000 && num > 400000) {
            printf("%s\n", errorMessages[INCORRECT_NUMBER_INPUT]);
            return INCORRECT_NUMBER_INPUT;
        }

        for(int i = 2; i < sqrt(num); ++i) {
            if(num % i == 0) {
                printf("Число является составным");
                return SUCCESS;
            }
        }
        printf("Число является простым");
    } else if(argv[2][1] == 's') {

        for(int j=0; j<=strlen(argv[1]); ++j) {
            if(strchr("1234567890", argv[1][j]) == NULL) {
                printf("%s\n", errorMessages[INCORRECT_NUMBER_INPUT]);
                return INCORRECT_NUMBER_INPUT;
            }
        }

        for(int i=0; i<=strlen(argv[1]); ++i)
            printf("%c ", argv[1][i]);

    } else if(argv[2][1] == 'e') {

        if(num < 1 && num > 10) {
            printf("%s\n", errorMessages[INCORRECT_NUMBER_INPUT]);
            return INCORRECT_NUMBER_INPUT;
        }

        for(int i=1; i<=num; ++i)
            printf("%11d ", i);

        printf("\n");

        for(int i=1; i<=10; ++i) {
            for(int j=1; j<=num; ++j)
                printf("%11.0lf ", pow(i,j));
            printf("\n");
        }

    } else if(argv[2][1] == 'a') {
        long double double_number = num * 1.0;
        printf("%.0lf", (1+double_number)/2*double_number);

    } else if(argv[2][1] == 'f') {
        if(num < 0 && num > 130) {
            printf("%s\n", errorMessages[INCORRECT_NUMBER_INPUT]);
            return INCORRECT_NUMBER_INPUT;
        }

        factorial(num);

    }

    return SUCCESS;
}
